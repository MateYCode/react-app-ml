{"version":3,"sources":["ShopModal.js","Header.js","Search.js","PicModal.js","CartIcon.js","Product.js","MercadoLibre.js","serviceWorker.js","index.js"],"names":["ShopModal","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","modal","toggle","bind","assertThisInitialized","e","setState","total","cart","shopList","length","react_default","a","createElement","Fragment","className","onClick","role","Modal","isOpen","ModalHeader","ModalBody","map","item","i","parseFloat","price","key","title","ModalFooter","Button","color","React","Component","Header","id","src_ShopModal","Search","handleSubmit","handleChange","onSubmit","onChange","type","value","PicModal","target","handleShop","src","alt","cartClick","thumbnail","data-title","height","CartIcon","persist","buyMeClick","data-price","Product","list","data-toggle","data-target","item-id","handleDescription","src_CartIcon","src_PicModal","MercadoLibre","inputValue","items","addedItems","handleFormSubmit","handleTextChange","buyMe","_this2","preventDefault","fetch","then","response","json","data","results","getAttribute","concat","toConsumableArray","src_Header","src_Search","src_Product","Boolean","window","location","hostname","match","ReactDOM","render","src_MercadoLibre","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bc9cf16d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport './styles.css'\r\nclass ShopModal extends React.Component {\r\n      constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                  modal: false,\r\n            };\r\n            this.toggle = this.toggle.bind(this);\r\n      }\r\n\r\n      toggle(e) {\r\n            this.setState({\r\n                  modal: !this.state.modal,\r\n            });\r\n      }\r\n\r\n      render() {\r\n            let total = 0\r\n            let cart = \"empty-cart btn\"\r\n            if (this.props.shopList.length) {\r\n                  cart = \"filled-cart btn\"\r\n            }\r\n            return (\r\n\r\n                  <React.Fragment>\r\n                        <div className={cart} onClick={this.toggle} role=\"button\"></div>\r\n                        <Modal isOpen={this.state.modal} toggle={this.toggle} className=\"\">\r\n                              <ModalHeader toggle={this.toggle} className=\"modal-header bg-info modal-title text-white\" >\r\n                                    <h4>Lista de Compras</h4>\r\n                              </ModalHeader>\r\n                              <ModalBody>\r\n                                    <div className=\"col-lg-12\">\r\n                                          <div className=\"table-responsve\">\r\n                                                <table className=\"table table-striped table-hover\">\r\n\r\n                                                      <thead className=\"\">\r\n                                                            <tr>\r\n                                                                  <th className=\"\">Cant</th>\r\n                                                                  <th className=\"\">Item</th>\r\n                                                                  <th className=\"\">Precio</th>\r\n\r\n                                                            </tr>\r\n\r\n                                                      </thead>\r\n                                                      <tbody>\r\n                                                            {this.props.shopList.map((item, i) => {\r\n                                                                  total = total + parseFloat(item.price);\r\n                                                                  return (\r\n                                                                        <tr key={i}>\r\n                                                                              <td>1</td>\r\n                                                                              <td>{item.title}</td>\r\n                                                                              <td>{item.price}</td>\r\n                                                                        </tr>\r\n\r\n                                                                  )\r\n                                                            })}\r\n                                                      </tbody>\r\n                                                      <tfoot className=\"\">\r\n                                                            <tr>\r\n                                                                  <th className=\"\"></th>\r\n                                                                  <th className=\"\">\r\n                                                                        <button className=\"btn btn-info\">Comprar</button>\r\n                                                                  </th>\r\n                                                                  <th className=\"price\">\r\n                                                                        {total}\r\n                                                                  </th>\r\n                                                            </tr>\r\n                                                      </tfoot>\r\n                                                </table>\r\n                                          </div>\r\n\r\n                                    </div>\r\n                              </ModalBody>\r\n                              <ModalFooter>\r\n\r\n                                    <Button color=\"secondary\" className=\"btn btn-default\" onClick={this.toggle}>Volver</Button>\r\n                              </ModalFooter>\r\n                        </Modal>\r\n                  </React.Fragment>\r\n            )\r\n      }\r\n}\r\n\r\n\r\nexport default ShopModal;","import React from 'react';\nimport ShopModal from './ShopModal';\n\nconst Header=(props)=>{\n  \n    return (\n      <React.Fragment>\n        <header>\n          <nav className=\"navbar bg-info text-white p-4 mb-3\">\n            <div className=\"container\">\n              <h2 id=\"header-title\">Buscá lo que necesites (Rest Api Mercado Libre)</h2>\n              <div className=\"float-right\">\n          \n        <ShopModal shopList={props.shopList}/>\n        </div>\n            </div>\n          </nav>\n        </header>\n      </React.Fragment>\n    );\n  }\n\n\nexport default Header;\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass Search extends Component {\r\n            constructor(props) {\r\n              super(props);\r\n              this.handleSubmit = this.handleSubmit.bind(this);\r\n              this.handleChange = this.handleChange.bind(this);\r\n            }\r\n            handleSubmit(e) {\r\n                  this.props.onSubmit(e);\r\n                }\r\n            handleChange(e){\r\n                  this.props.onChange(e);\r\n            }\r\n      render() {\r\n            return (\r\n                  <React.Fragment>\r\n                        <div className=\"container\" id=\"search\">\r\n                              <div id=\"main\" className=\"card card-body\">\r\n                                    <h2 className=\"title\">Consulta</h2>\r\n\r\n                                    <form className=\"form-inline mb-3\" onSubmit={this.handleSubmit}>\r\n                                          <input type=\"text\" className=\"form-control mr-2\" value={this.props.value} onChange={this.handleChange}/>\r\n                                          <input type=\"submit\" className=\"btn btn-info\" value=\"Buscar\"/> {/*onClick  y/o onSubmit=tiene que tomar el state y usarlo en la busqueda de mercado libre */} \r\n                                          {/*cerré las tags de input*/}\r\n                                    </form>\r\n\r\n                                    <template>\r\n                                          <h2 className=\"title\">Resultados</h2>\r\n                                          <ul id=\"items\" className=\"list-group\">\r\n                                          </ul>\r\n                                          <script>let items = document.querySelector('#items')</script>\r\n                                    </template>\r\n                              </div>\r\n                             \r\n                        </div>\r\n                  </React.Fragment>\r\n            );\r\n      }\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport './styles.css'\r\nclass PicModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false,\r\n      target: \"\"\r\n    };\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.handleShop = this.handleShop.bind(this);\r\n  }\r\n\r\n  toggle(e) {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n      target: e.target.src,\r\n      title: e.target.alt\r\n    });\r\n  }\r\n  handleShop(e) {\r\n    this.props.cartClick(e);\r\n    e.target.className = \"added-cart\"\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <img onClick={this.toggle} src={this.props.item.thumbnail} data-title={this.props.item.title} alt={this.props.item.title} role=\"button\" />\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle} className=\"\">\r\n          <ModalHeader toggle={this.toggle} className=\"bg-info\">{this.state.title}</ModalHeader>\r\n          <ModalBody>\r\n            <img className=\"modal-body-img\" height=\"300em\" src={this.state.target} alt=\"product\" />\r\n          </ModalBody>\r\n          <ModalFooter>\r\n\r\n            <Button color=\"secondary\" className=\"btn btn-default\" onClick={this.toggle}>Volver</Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default PicModal;","import React, { Component } from 'react';\r\nimport './styles.css';\r\nclass CartIcon extends Component {\r\n    constructor() {\r\n        super();\r\n        this.handleShop = this.handleShop.bind(this)\r\n    }\r\n\r\n    handleShop(e) {\r\n        e.persist();\r\n        e.target.className = \"added-cart\"\r\n        this.props.buyMeClick(e);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"float-right\">\r\n                <div className=\"buy-cart\" data-price={this.props.price} data-title={this.props.title} onClick={this.handleShop} ></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CartIcon;","import React from 'react';\r\nimport PicModal from './PicModal';\r\nimport CartIcon from './CartIcon';\r\n\r\nconst Product=(props)=>{\r\n            return (\r\n                  <ul id=\"items\" className=\"list-group\">\r\n                        {props.list.map((item, i) => {\r\n                              return (\r\n                                    <React.Fragment key={item.id}>\r\n                                          <li className=\"list-group-item\">\r\n                                                <span title=\"Ver descripción\" data-toggle=\"modal\" data-target=\"#descriptionModal\" role=\"button\" item-id={item.id} onClick={props.handleDescription}>{item.title}</span>\r\n                                                <CartIcon title={item.title} price={item.price} buyMeClick={props.buyMeClick}/>\r\n                                                <div className=\"float-right\">\r\n                                                      <span className=\"price\">{item.price}</span>\r\n                                                </div>\r\n                                          </li>\r\n\r\n                                          <li className=\"list-group-item\">\r\n                                                <PicModal item={item} />\r\n                                          </li>\r\n\r\n                                          {/*<ModalImage image={item.thumbnail} onClick={this.handleImageShow}/>*/}\r\n                                    </React.Fragment>\r\n                              )\r\n                        }\r\n                        )}\r\n                  </ul>\r\n            );\r\n      }\r\n\r\nexport default Product;","import React, { Component } from 'react';\nimport Header from './Header.js'\nimport Search from './Search.js'\nimport Product from './Product'\n\nclass MercadoLibre extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      inputValue: \"\",\n      items: [],\n      addedItems: []\n    }\n    this.handleFormSubmit = this.handleFormSubmit.bind(this)\n    this.handleTextChange = this.handleTextChange.bind(this)\n    this.buyMe = this.buyMe.bind(this)\n  }\n  handleFormSubmit(e) {\n    e.preventDefault()\n    let url = \"https://api.mercadolibre.com/sites/MLA/search?q=\"\n    fetch(url + this.state.inputValue)\n      .then(response => response.json())\n      .then(data => data.results)\n      .then(list => this.setState({ items: list }))\n  }\n  handleTextChange(e) {\n    this.setState({\n      inputValue: e.target.value\n    })\n  }\n  buyMe(e) {\n    const title = e.target.getAttribute('data-title')\n    const price = e.target.getAttribute('data-price')\n    this.setState({\n      addedItems: [...this.state.addedItems, { \"title\": title, \"price\": price }]\n    })\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <Header shopList={this.state.addedItems} />\n        <Search onSubmit={this.handleFormSubmit} value={this.state.inputValue} onChange={this.handleTextChange} />\n        <ul id=\"items\" className=\"list-group\">\n        <li></li>\n          <Product list={this.state.items} buyMeClick={this.buyMe} />\n        </ul>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MercadoLibre;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MercadoLibre from './MercadoLibre';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<MercadoLibre/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}